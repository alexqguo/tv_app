Notes

- Models
	- user
		- username, profile_private (bool)
		- has_many: shows (through user_shows), episode_views
	- session
		- user_id, session_token
		- belongs_to: user
	- show
		- name, in_production, release_date, descripton (text), poster_path,
			created_by (string for names), tmdb_id
		- has_many: users (through user_shows), seasons
		- poster image: https://image.tmdb.org/t/p/w185 + poster_path
		- methods: all_episodes (concat episodes for each season)
	- user_show
		- user_id, show_id
		- belongs_to: user, show
	- season
		- show_id, tmdb_id, 
		- has_many: episodes
		- belongs_to: show
	- episode
		- name, season_id, release_date, episode_number
		- has_many: episode_views
		- belongs_to: season
	- episode_view
		- user_id, episode_id, in_progress (bool)
		- belongs_to: user, episode

- Todo
	- friendly_id
	- set up figaro?
	- add custom validations for poster_path
	- actually implement UserShow
	- Shows Controller
		- do actual calculation for default_season
	- implement way to find other users
	- implement notifications? (eh, there's activity feed for this we can use public activity)
